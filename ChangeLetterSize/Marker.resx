<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="buttonScreenShot.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADIAAAApCAYAAAB3LnrpAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAACxIAAAsSAdLdfvwAAAAGYktHRAD/AP8A/6C9p5MAAAAHdElNRQfhAgwPOS741EkX
        AAAAHWlUWHRDb21tZW50AAAAAABDcmVhdGVkIHdpdGggR0lNUGQuZQcAAAPeSURBVGhD7Zm7LzRRGMat
        S+ESFILK/RbXgsYlQUl0IoJWKBQ0aFgt/4BWoiAhRBQqjSgQnU5Ei4REIi4Rl/eb58yZb8/uvDszZ3bi
        Q74n+dnN2ee873n27M7sjCQi8oWhEB739/epv7+fSkpKKCcnRwvMwVzUUGv7gR30yujoKBIFwvj4uFGS
        7+MFdtALy8vLtsUkCmrG9vEKO+iF7Oxs20ISJTc31yjN93ODHXTj/PzctoiguLi4MFrwfZ1gB904OTmx
        LSAoTk9PjRZ8XyeSBgYGqKOjQ4vm5mbbAoKipaWF7ekEMiSVlpayBX8SIsNvCFJWVvaLgog/ciAUColD
        4OHhIX18fNDd3R1NT0+LcXXid8MWBOzt7RkHgYg+Pz+pqKgoyuNERkYGNTY20sTEBG1sbNDx8TEdHR3R
        5uamGGtqaqL09HR2rl/YIJxGRkaiPLFgx8DU1BS9vr7KWfEFz+TkJCUnJwey22yQy8tL2c4UdqShoSHK
        E0tbWxtdXV3JGd51fX1N7e3tbE0d2CD19fX0+PgoWxFtbW1RSkpKlEcFuwUhsPr49PQkvmvb29sCPMcY
        ZHksue24G2wQi+7ubvP4bDyPt/2dnZ1yKRHd39/T0NAQ6wfDw8PCowrBUIvze8ExiBvV1dVyGREtLi5S
        amoq61eBZ2lpSc6KqKamxtd3JqEgBwcHsr2p2dlZ1ucE5qhCTc7nhu8g+H2janV1lfV5AXNVobburogM
        umd2NMEXV1VhYSHr9QLmqkLtLwtye3sr2xKtrKywPh1QwxJq+wqi+9HKysqSLU2Vl5ezPh0qKipkNVPo
        wfni4StIa2urbEf08vJCQVzyogZqWUIPzhcPX0H6+vpkOxInTt13jyMzMzPqJIwenC8eIoPud6Srq0u2
        I3p+fg4kCHYEtSyhB+eLh68dycvLk+3MM3JBQQHr0wE11J8t6MH54uErCI4oDw8PsiXR/Pw869MBNSyh
        9pcctfDT++zs7O87+P7+TmlpaazXC5j79vYmaqEman9JEDQZGxsTjS3hKpLzOmEtFnNVoXas1w1fQSxu
        bm5ka1O4JuF8TuBaRBWuTzifGwkF6enpke1N4SOmEwZezFHV29vLet0QGRK5ixIOh+USItrd3aX8/HzW
        D/Dazs6OdEe0sLDA+r2Q0I5YrK2tyaVEC7dVZ2ZmaHBwUIDnGOO0vr7O1vZKIEHA3NycuH2kK8zBXK6m
        Dgl/tFSKi4ttP++dhIsondtMTgQaxKK2tla8y/h3mnpkw3OM4bW6ujp2rl8C+2jponvCc+OfBQma/0G+
        GyJDZWWluM/0k6mqqqI/fx19wyxLrNkAAAAASUVORK5CYII=
</value>
  </data>
</root>